name: E2E
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install Linux dependencies for containerd
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          btrfs-progs \
          libbtrfs-dev \
          libseccomp2 \
          libseccomp-dev \
          socat

    - name: Checkout containerd
      uses: actions/checkout@v4
      with:
        repository: containerd/containerd
        path: containerd

    - name: Install containerd
      working-directory: containerd
      run: |
        make
        sudo -E PATH=$PATH make install

    - name: Install cni
      working-directory: containerd
      run: |
        sudo -E PATH=$PATH script/setup/install-cni $(grep containernetworking/plugins go.mod | awk '{print $2}')

    - name: Configure containerd
      run: |
        BDIR="/var/lib/containerd-critest"
        sudo mkdir -p ${BDIR}/{root,state}
        sudo bash -c 'cat > ${BDIR}/config.toml <<EOF
        version = 2
        [plugins."io.containerd.grpc.v1.cri"]
          sandbox_image = "k8s.gcr.io/pause:3.9"
          [plugins."io.containerd.grpc.v1.cri".containerd]
            snapshotter = "overlayfs"
            default_runtime_name = "runc"
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              runtime_type = "io.containerd.runc.v2"
        EOF'

    - name: Run e2e tests
      run: |
        BDIR="/var/lib/containerd-critest"
        sudo touch ${BDIR}/containerd-cri.log
        sudo -E PATH=$PATH /usr/local/bin/containerd -a ${BDIR}/c.sock -root ${BDIR}/root -state ${BDIR}/state -log-level debug >> ${BDIR}/containerd-cri.log 2>&1 &

        while ! grep -q 'containerd successfully booted' ${BDIR}/containerd-cri.log; do
            sleep 1
        done

        sudo -E PATH=$PATH make test-e2e --runtime-endpoint=unix:///${BDIR}/c.sock
        sudo pkill containerd
        sudo rm -rf ${BDIR}
